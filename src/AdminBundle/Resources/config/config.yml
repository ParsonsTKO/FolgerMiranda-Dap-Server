fos_user:
  db_driver: orm
  firewall_name: main
  user_class: AdminBundle\Entity\User
  service:
    user_manager: "app.user_manager"
  from_email:
    address: "%env(MAILER_USER)%"
    sender_name: "%env(MAILER_USER)%"
  registration:
    confirmation:
      enabled: true
    form:
      type: AppBundle\Form\Type\UserRegistrationFormType
  profile:
    form:
      type: AppBundle\Form\Type\UserProfileFormType

easy_admin:
    site_name: '<img src="%env(FRONTEND_URL)%/%env(FRONTEND_VERSION)%/dist/images/logo-miranda.svg" />'
    design:
      brand_color: '#272537'
      assets:
        favicon: '%env(FRONTEND_URL)%/%env(FRONTEND_VERSION)%/dist/images/favicon/favicon-96x96.png'
      menu:
        - { entity: 'User', icon: 'user', label: 'Users', default: true }
        - { entity: 'FeaturedResult', icon: 'sticky-note', label: 'Featured Results', default: true }
        - { entity: 'Record', icon: 'sticky-note', label: 'Records', default: true }
        - { entity: 'MyShelfRecord', icon: 'sticky-note', label: 'MyShelfRecord', default: true }
        - { entity: 'MyShelfFolder', icon: 'sticky-note', label: 'MyShelfFolder', default: true }
        - { label: 'GraphQL', route: 'dap_dashboard' }
    entities:
        User:
            class: AdminBundle\Entity\User
            list:
                fields:
                    - { property: 'usernameCanonical', label: 'Username' }
                    - displayName
                    - { property: 'emailCanonical', label: 'Email' }
                    - enabled
                    - lastLogin
            edit:
                fields:
                    - username
                    - { property: 'displayName', type: 'text', type_options: { required: false }}
                    - email
                    - enabled
                    - { property: 'plainPassword', type: 'password', type_options: { required: false }}
                    - { property: 'apiKey', label: 'API Key', type: 'text', type_options: { disabled: true }}
                    - { property: 'resetApiKey', type: 'checkbox', type_options: { required: false }}
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN', ROLE_SUPER_ADMIN: 'ROLE_SUPER_ADMIN' } } }
                form_options: { validation_groups: ['Profile'] }
            new:
                fields:
                    - username
                    - { property: 'displayName', type: 'text', type_options: { required: false }}
                    - email
                    - enabled
                    - { property: 'plainPassword', type: 'password', type_options: { required: true} }
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN', ROLE_SUPER_ADMIN: 'ROLE_SUPER_ADMIN' } } }
                form_options: { validation_groups: ['Registration'] }
        FeaturedResult:
            class: AppBundle\Entity\FeaturedResult
        MyShelfRecord:
            class: AppBundle\Entity\MyShelfRecord
            list:
              help: '<p>This screen lets you find and edit My Shelf records for all users. This may be useful for handling any reported abuse of the system. However, we do not expect it to be used very often.</p>'
              fields:
                - id
                - recordID
                - notes
                - owner
                - dateAdded
                - lastUpdated
                - sortOrder
        MyShelfFolder:
            class: AppBundle\Entity\MyShelfFolder
            list:
              help: '<p>This screen lets you find and edit My Shelf folders for all users. This may be useful for handling any reported abuse of the system. However, we do not expect it to be used very often.</p>'
              fields:
                - id
                - MyShelfTag
                - tagName
                - owner
                - notes
                - dateAdded
                - lastUpdated
                - sortOrder
        Record:
            class: AppBundle\Entity\Record
            disabled_actions: ['new', 'edit']
            actions:
                - jsonView
                - search
                - delete
            list:
                help: '<p>You can enter a dapID in the search field find a particular record. Partial dapIDs are not supported.</p><p>Choosing &ldquo;View JSON&rdquo; will show you the internal representation of this record in JSON. To edit a record, work with this JSON and feed it back into the <a href="/dapadmin/dapimport/voyager">importer</a>.</p>'
                actions:
                    - search
                    - { name: 'jsonView', label : 'View JSON', icon: 'code' }
                    - { name: 'delete', icon: 'trash' }
                fields:
                    - { property: 'dapID', label: 'dapID', type: 'string'}
                    - createdDate
                    - updatedDate
